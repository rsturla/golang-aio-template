name: GoLang AIO CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Setup Dependencies
        uses: ./.github/actions/setup-deps

      - name: Format Node
        working-directory: ./web
        run: yarn format --check

      - name: Format Go
        run: |
          gofmt_output=$(gofmt -s -d .)
          if [ -n "$gofmt_output" ]; then
            echo "Code formatting issues found:"
            echo "$gofmt_output"
            exit 1
          fi


  lint:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Setup Dependencies
        uses: ./.github/actions/setup-deps

      - name: Lint Node
        working-directory: ./web
        run: yarn lint

      - name: Analyze Go
        run: go vet ./...

      - name: Lint Go
        uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3
        with:
          version: latest
          skip-pkg-cache: true


  build-binary:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Setup Dependencies
        uses: ./.github/actions/setup-deps

      - name: Build Node
        working-directory: ./web
        run: yarn export

      - name: Build Go
        run: go build -o ./bin/golang-aio-ci .


  build-docker:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Setup Docker
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3

      - name: Build Image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5
        with:
          context: .
          tags: golang-aio:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
